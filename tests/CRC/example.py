import sys, os
sys.path.append(os.path.abspath('../../src/CRC'))
from crc import *

message = input('Enter the message: ') #'Hello. This is the message.'

#message = [0x48,0x65,0x6c,0x6c,0x6f]         #for hex values
#for i in range(len(message)):
    #message[i]=chr(message[i])

#8-bit CRC applications
print('8-bit AUTOSAR CRC of the message is', format(getCRC(message, CRC8_AUTOSAR),'02x'))
print('8-bit BLUETOOTH CRC of the message is', format(getCRC(message, CRC8_BLUETOOTH),'02x'))
print('8-bit CDMA2000 CRC of the message is', format(getCRC(message, CRC8_CDMA2000),'02x'))
print('8-bit DARC CRC of the message is', format(getCRC(message, CRC8_DARC),'02x'))
print('8-bit DVB-S2 CRC of the message is', format(getCRC(message, CRC8_DVB_S2),'02x'))
print('8-bit EBU CRC of the message is', format(getCRC(message, CRC8_EBU),'02x'))
print('8-bit GSM-A CRC of the message is', format(getCRC(message, CRC8_GSM_A),'02x'))
print('8-bit GSM-B CRC of the message is', format(getCRC(message, CRC8_GSM_B),'02x'))
print('8-bit ITU CRC of the message is', format(getCRC(message, CRC8_ITU),'02x'))
print('8-bit I-CODE CRC of the message is', format(getCRC(message, CRC8_I_CODE),'02x'))
print('8-bit LTE CRC of the message is', format(getCRC(message, CRC8_LTE),'02x'))
print('8-bit MAXIM CRC of the message is', format(getCRC(message, CRC8_MAXIM),'02x'))
print('8-bit MIFARE-MAD CRC of the message is', format(getCRC(message, CRC8_MIFARE_MAD),'02x'))
print('8-bit NRSC-5 CRC of the message is', format(getCRC(message, CRC8_NRSC_5),'02x'))
print('8-bit OPENSAFETY CRC of the message is', format(getCRC(message, CRC8_OPENSAFETY),'02x'))
print('8-bit ROHC CRC of the message is', format(getCRC(message, CRC8_ROHC),'02x'))
print('8-bit SAE-J1850 CRC of the message is', format(getCRC(message, CRC8_SAE_J1850),'02x'))
print('8-bit SMBUS CRC of the message is', format(getCRC(message, CRC8_SMBUS),'02x'))
print('8-bit WCDMA CRC of the message is', format(getCRC(message, CRC8_WCDMA),'02x'))

#16-bit CRC applications
print('16-bit A CRC of the message is', format(getCRC(message, CRC16_A),'04x'))
print('16-bit ARC CRC of the message is', format(getCRC(message, CRC16_ARC),'04x'))
print('16-bit AUG-CCITT CRC of the message is', format(getCRC(message, CRC16_AUG_CCITT),'04x'))
print('16-bit B CRC of the message is', format(getCRC(message, CRC16_B),'04x'))
print('16-bit CCITT-FALSE CRC of the message is', format(getCRC(message, CRC16_CCITT_FALSE),'04x'))
print('16-bit CDMA2000 CRC of the message is', format(getCRC(message, CRC16_CDMA2000),'04x'))
print('16-bit CMS CRC of the message is', format(getCRC(message, CRC16_CMS),'04x'))
print('16-bit DDS-110 CRC of the message is', format(getCRC(message, CRC16_DDS_110),'04x'))
print('16-bit DECT-R CRC of the message is', format(getCRC(message, CRC16_DECT_R),'04x'))
print('16-bit DECT-X CRC of the message is', format(getCRC(message, CRC16_DECT_X),'04x'))
print('16-bit DNP CRC of the message is', format(getCRC(message, CRC16_DNP),'04x'))
print('16-bit EN-13757 CRC of the message is', format(getCRC(message, CRC16_EN_13757),'04x'))
print('16-bit GENIBUS CRC of the message is', format(getCRC(message, CRC16_GENIBUS),'04x'))
print('16-bit GSM CRC of the message is', format(getCRC(message, CRC16_GSM),'04x'))
print('16-bit KERMIT CRC of the message is', format(getCRC(message, CRC16_KERMIT),'04x'))
print('16-bit LJ1200 CRC of the message is', format(getCRC(message, CRC16_LJ1200),'04x'))
print('16-bit MAXIM CRC of the message is', format(getCRC(message, CRC16_MAXIM),'04x'))
print('16-bit MCRF4XX CRC of the message is', format(getCRC(message, CRC16_MCRF4XX),'04x'))
print('16-bit MODBUS CRC of the message is', format(getCRC(message, CRC16_MODBUS),'04x'))
print('16-bit NRSC-5 CRC of the message is', format(getCRC(message, CRC16_NRSC_5),'04x'))
print('16-bit OPENSAFETY-A CRC of the message is', format(getCRC(message, CRC16_OPENSAFETY_A),'04x'))
print('16-bit OPENSAFETY-B CRC of the message is', format(getCRC(message, CRC16_OPENSAFETY_B),'04x'))
print('16-bit PROFIBUS CRC of the message is', format(getCRC(message, CRC16_PROFIBUS),'04x'))
print('16-bit RIELLO CRC of the message is', format(getCRC(message, CRC16_RIELLO),'04x'))
print('16-bit T10-DIF CRC of the message is', format(getCRC(message, CRC16_T10_DIF),'04x'))
print('16-bit TELEDISK CRC of the message is', format(getCRC(message, CRC16_TELEDISK),'04x'))
print('16-bit TMS37157 CRC of the message is', format(getCRC(message, CRC16_TMS37157),'04x'))
print('16-bit UMTS CRC of the message is', format(getCRC(message, CRC16_UMTS),'04x'))
print('16-bit USB CRC of the message is', format(getCRC(message, CRC16_USB),'04x'))
print('16-bit XMODEM CRC of the message is', format(getCRC(message, CRC16_XMODEM),'04x'))

#32-bit CRC applications
print('32-bit ADCCP CRC of the message is', format(getCRC(message, CRC32_ADCCP),'08x'))
print('32-bit AUTOSAR CRC of the message is', format(getCRC(message, CRC32_AUTOSAR),'08x'))
print('32-bit BZIP2 CRC of the message is', format(getCRC(message, CRC32_BZIP2),'08x'))
print('32-bit C CRC of the message is', format(getCRC(message, CRC32_C),'08x'))
print('32-bit CD-ROM-EDC CRC of the message is', format(getCRC(message, CRC32_CD_ROM_EDC),'08x'))
print('32-bit D CRC of the message is', format(getCRC(message, CRC32_D),'08x'))
print('32-bit JAMCRC CRC of the message is', format(getCRC(message, CRC32_JAMCRC),'08x'))
print('32-bit MPEG2 CRC of the message is', format(getCRC(message, CRC32_MPEG2),'08x'))
print('32-bit POSIX CRC of the message is', format(getCRC(message, CRC32_POSIX),'08x'))
print('32-bit Q CRC of the message is', format(getCRC(message, CRC32_Q),'08x'))
print('32-bit XFER CRC of the message is', format(getCRC(message, CRC32_XFER),'08x'))

#64-bit CRC applications
print('64-bit ECMA-182 CRC of the message is', format(getCRC(message, CRC64_ECMA_182),'016x'))
print('64-bit GO-ISO CRC of the message is', format(getCRC(message, CRC64_GO_ISO),'016x'))
print('64-bit WE CRC of the message is', format(getCRC(message, CRC64_WE),'016x'))
print('64-bit XZ CRC of the message is', format(getCRC(message, CRC64_XZ),'016x'))
